{"mappings":"ACAA,SAAS,gBAAA,CAAiB,mBAAoB,eAEtC,EADJ,IAAM,EAAW,SAAS,aAAA,CAAc,eAGlC,EAAc,KAChB,EAAW,cAAc,MAAA,CAAO,CAAC;;;;;;;;;;;QAWjC,CAAC,CAAE,CACC,OAAQ,AAAC,IACL,IAAM,EAAmB,EAAS,OAAA,GAAU,aAAA,CAAc,qBAC1D,EAAiB,gBAAA,CAAiB,QAAS,IAAM,EAAS,KAA1D,IACA,SAAS,gBAAA,CAAiB,UAAW,EACzC,EACA,QAAS,KACL,SAAS,mBAAA,CAAoB,UAAW,EAC5C,CACJ,EACJ,EAEM,EAAiB,AAAC,IACF,WAAd,EAAM,GAAA,EACN,EAAS,KADb,EAGJ,EAEA,EAAS,gBAAA,CAAiB,QAAS,KAC/B,IACA,EAAS,IAAT,EACJ,EACJ,E,4D","sources":["<anon>","src/js/hero-modal.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    const btnModal = document.querySelector(\".bookButton\");\n    let instance;\n    const createModal = ()=>{\n        instance = basicLightbox.create(`\n            <div class=\"modal\">\n                <p>A custom modal that has been styled independently. It's not part of basicLightbox, but perfectly shows its flexibility.</p>\n                <input placeholder=\"Type something\">\n               \n                <button type=\"button\" class=\"closeModalButton\">\n                    <svg class=\"modal-back\" width=\"20\" height=\"20\">\n                        <use href=\"./images/icons.svg#mod-close\"></use>\n                    </svg>\n                </button>\n            </div>\n        `, {\n            onShow: (instance)=>{\n                const closeModalButton = instance.element().querySelector(\".closeModalButton\");\n                closeModalButton.addEventListener(\"click\", ()=>instance.close());\n                document.addEventListener(\"keydown\", handleEscPress);\n            },\n            onClose: ()=>{\n                document.removeEventListener(\"keydown\", handleEscPress);\n            }\n        });\n    };\n    const handleEscPress = (event)=>{\n        if (event.key === \"Escape\") instance.close();\n    };\n    btnModal.addEventListener(\"click\", ()=>{\n        createModal();\n        instance.show();\n    });\n});\n\n//# sourceMappingURL=index.50e7b40b.js.map\n","document.addEventListener('DOMContentLoaded', function () {\n    const btnModal = document.querySelector('.bookButton');\n    let instance;\n\n    const createModal = () => {\n        instance = basicLightbox.create(`\n            <div class=\"modal\">\n                <p>A custom modal that has been styled independently. It's not part of basicLightbox, but perfectly shows its flexibility.</p>\n                <input placeholder=\"Type something\">\n               \n                <button type=\"button\" class=\"closeModalButton\">\n                    <svg class=\"modal-back\" width=\"20\" height=\"20\">\n                        <use href=\"./images/icons.svg#mod-close\"></use>\n                    </svg>\n                </button>\n            </div>\n        `, {\n            onShow: (instance) => {\n                const closeModalButton = instance.element().querySelector('.closeModalButton');\n                closeModalButton.addEventListener('click', () => instance.close());\n                document.addEventListener('keydown', handleEscPress);\n            },\n            onClose: () => {\n                document.removeEventListener('keydown', handleEscPress);\n            },\n        });\n    };\n\n    const handleEscPress = (event) => {\n        if (event.key === 'Escape') {\n            instance.close();\n        }\n    };\n\n    btnModal.addEventListener('click', () => {\n        createModal();\n        instance.show();\n    });\n});\n"],"names":["document","addEventListener","instance","btnModal","querySelector","createModal","basicLightbox","create","onShow","closeModalButton","element","close","handleEscPress","onClose","removeEventListener","event","key","show"],"version":3,"file":"index.50e7b40b.js.map"}